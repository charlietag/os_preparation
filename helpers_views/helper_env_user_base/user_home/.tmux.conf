# -------------------------------------------------------------------------------------------------
#                                       General Settting
# -------------------------------------------------------------------------------------------------
# unbind all binded keys before setting
# unbind-key -a

##########################
# According to source code github:tmux/tmux/cmd-set-option.c
# set -g alias to set-option -g
# setw -g alias to set-window-option -g
##########################

# 24-biti colors
set                -g      default-terminal    screen-256color
set-option         -ga     terminal-overrides  ",*256col*:Tc"

# copy paste mode - vi
setw               -g      mode-keys           vi
set-option         -g      status-keys         vi

# Other config
set-option         -g      mouse               off
set-option         -g      base-index          1
set-window-option  -g      pane-base-index     1

# Prevent Applications Like Vim and Less Clearing Screen on Exit
set-window-option  -g      alternate-screen  off

# history in tmux
set-option         -g      history-limit     100000


# tmux will automatically renumber the windows of a session (as with move-window -r) after any window is closed
set-option -g renumber-windows on

# helps in faster key repetition, useful for switching mode between ESC and i in vim
# if cares about ESC and i switching in vim, set to 50 is recommended
#   , set to zero is not recommended, it might effect Function key in tmux (F1~F12)
# it would be better NOT to change this value, use default value: 500
#set-option  -sg  escape-time       500

# works with window-status-activity-style
setw        -g   monitor-activity  on
set         -g   allow-rename      off # default setting


# -------------------------------------------------------------------------------------------------
#                                       bind-key Settting
# -------------------------------------------------------------------------------------------------
##########################
# -T, table <prefix|root>
#     default -T prefix
#     EX: bind-key -T prefix c new-window ===>  bind-key c new-window
# -r, repeat , used with prefix
# -n , used without prefix
#      EX: -T root ===> -T root -r (because without prefix, keyboard could repeat key in automatically)
#      EX: bind-key -n F8 next-window
##########################
# ----- prefix setup -----
#Set prefix key to Ctrl-a
unbind-key C-b
set-option         -g      prefix              C-a
# send the prefix to client inside window
bind-key           C-a     send-prefix

# ----- bind-key : pane -----
# ** pane **
bind-key  -n  F2    split-window   -v -c '#{pane_current_path}'
bind-key  -n  S-F2  split-window   -h -c '#{pane_current_path}'

bind-key  -n  F3    select-layout  -E
bind-key  -n  S-F3  next-layout

bind-key  -n  F4    resize-pane    -Z     # Maxmize pane
bind-key  -n  S-F4  break-pane            # move current pane to new-window

bind-key  -n  F9    last-window
bind-key  -n  S-F9  select-pane    -t  :.+  # Jump to pane, could use shift+arrow instead
#bind-key   -n  S-F9       rotate-window

# ** pane selection **
bind-key   -n  M-Up       select-pane -U
bind-key   -n  M-Down     select-pane -D
bind-key   -n  M-Left     select-pane -L
bind-key   -n  M-Right    select-pane -R

# ** pane - resize **
unbind-key   M-Up
unbind-key   M-Down
unbind-key   M-Left
unbind-key   M-Right
bind-key   -r  M-Up       resize-pane      -U              2
bind-key   -r  M-Down     resize-pane      -D              2
bind-key   -r  M-Left     resize-pane      -L              2
bind-key   -r  M-Right    resize-pane      -R              2

# ----- bind-key : window -----
# new-window -a , -a mean create new window next to current window
#bind-key   -n  F5         new-window -a  # <--- reorder(renumber-windows)  window number will solve my issue
bind-key  -n  F5  new-window
bind-key  -n  F6  detach
bind-key  -n  F7  previous-window
bind-key  -n  F8  next-window

# select window by specifying ALT + number
bind-key  -n  M-1   select-window    -t  :=1
bind-key  -n  M-2   select-window    -t  :=2
bind-key  -n  M-3   select-window    -t  :=3
bind-key  -n  M-4   select-window    -t  :=4
bind-key  -n  M-5   select-window    -t  :=5
bind-key  -n  M-6   select-window    -t  :=6
bind-key  -n  M-7   select-window    -t  :=7
bind-key  -n  M-8   select-window    -t  :=8
bind-key  -n  M-9   select-window    -t  :=9

# move current window to left / right
bind-key  -n  S-Left            swap-window  -d  -t  -1
bind-key  -n  S-Right           swap-window  -d  -t  +1

# --- bind-key : helper ---
bind-key  [  copy-mode
bind-key  ]  paste-buffer
bind-key  :  command-prompt
bind-key  ?  list-keys


# -------------------------------------------------------------------------------------------------
#                                       TMUX Plugins
# -------------------------------------------------------------------------------------------------
# --- Basic plugins ---
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# delete plugin folders which is not used anymore (plugin listed before, but removed from .tmux.conf already)
bind-key   C                run-shell ~/.tmux/plugins/tpm/bindings/clean_plugins

#--- tmux copy cat (like vim-easymotion) ---
set -g @plugin 'tmux-plugins/tmux-copycat'

# --- Recover session after reboot ---
# tmux session save / restore
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'      # recover vim session
set -g @resurrect-capture-pane-contents 'on'  # recover pane layout and contents

# auto save session ,auto restore session , works with tmux-resurrect
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'                # auto restore after tmux kill-server


# --- charlietag : theme ---
set -g @plugin 'charlietag/tmux-themes'


# --- charlietag : Plugins ---
# get cpu model name , automatically **append** cpu model into "status-left" or "status-right"
set -g @plugin 'charlietag/tmux-cpu-model'    # limitation : this line must behind theme / status-format (either plugin way or directly setup above)
set -g @cpu-model-mode 'left'                # [ left | right | none ]
set -g @cpu-model-colour 'fg=colour233,bg=colour240,bold' # setup cpu model name style
#set -g @cpu-model-mode 'right'                # [ left | right | none ]
#set -g @cpu-model-colour 'fg=colour232,bg=colour3,bold' # setup cpu model name style

# split status bar into two parts : window + status-left/status-right, requires tmux version ~> 3.0
set -g @plugin 'charlietag/tmux-split-statusbar'
set -g @split-statusbar-mode 'on'             # [ on | off]
set -g @split-statusbar-bindkey '-n F11'      # [ M-s | -n F11 ] , this is for toggle statusbar-mode, define yourself just like bind-key


# --- Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf) ---
run -b '~/.tmux/plugins/tpm/tpm'
